{"version":3,"file":"umb-geo.js","sources":["../../../Client/src/umb-geo.ts"],"sourcesContent":["import { LitElement, html, customElement, property } from '@umbraco-cms/backoffice/external/lit';\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\nimport {  UmbPropertyEditorConfigCollection, UmbPropertyEditorUiElement } from '@umbraco-cms/backoffice/property-editor';\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\nimport {UMB_AUTH_CONTEXT, UmbAuthContext} from \"@umbraco-cms/backoffice/auth\";\n\n@customElement('geo-location')\nexport default class UmbGeoLocationPropertyEditorUIElement extends UmbElementMixin(LitElement) implements UmbPropertyEditorUiElement{\n    public get value(){\n        return this.coordinates\n    }\n    \n    public set value(value) {\n        if (value) {\n            this.coordinates = value;\n        } else {\n            console.warn('Attempted to set coordinates to undefined.');\n        }\n    }\n    \n    @property()\n    public geoAuthToken: Promise<string> | undefined\n    \n\n    @property({ attribute: false })\n    public set config(config: UmbPropertyEditorConfigCollection | undefined) {\n        if (!config) {\n            console.warn('Config is undefined.');\n            return;\n        }\n\n        // Retrieve the value of defaultGeolocation\n        const defaultCoordinatesConfigValue: { latitude: number; longitude: number; elevation: number } | undefined =\n            config.getValueByAlias(\"defaultGeolocation\");\n\n        if (defaultCoordinatesConfigValue) {\n            // Check if any of the fields are empty or invalid, and fall back to defaultCoordinatesConfigValue\n            this.coordinates = {\n                latitude: this.coordinates.latitude || defaultCoordinatesConfigValue.latitude,\n                longitude: this.coordinates.longitude || defaultCoordinatesConfigValue.longitude,\n                elevation: this.coordinates.elevation || defaultCoordinatesConfigValue.elevation,\n            };\n        } else {\n            console.warn('defaultGeolocation not found. Using existing coordinates:', this.coordinates);\n        }\n    }\n    @property({ type: Boolean })\n    private _validationState: { isLatitudeValid: boolean; isLongitudeValid: boolean; isElevationValid: boolean, isValid: boolean } = {\n        isLatitudeValid: true,\n        isLongitudeValid: true,\n        isElevationValid: true,\n        isValid: true,\n    };\n\n    @property({ type: Object }) // Default value\n    public coordinates: { latitude: number; longitude: number; elevation: number } = {\n        latitude: 0,\n        longitude: 0,\n        elevation: 0,\n    };\n    \n    private _authContext: UmbAuthContext | undefined;\n\n    #onInput(e: InputEvent, field: 'latitude' | 'longitude' | 'elevation') {\n        const value = parseFloat((e.target as HTMLInputElement).value);\n        this.coordinates = {\n            ...this.coordinates,\n            [field]: value,\n        };\n    \n        this.#validateCoordinates();\n    }\n    \n    #onChange(e: Event, field: 'latitude' | 'longitude' | 'elevation') {\n        const value = parseFloat((e.target as HTMLInputElement).value);\n        this.coordinates = {\n            ...this.coordinates,\n            [field]: value,\n        };\n        if (this._validationState.isValid) {\n            this.#dispatchChangeEvent();\n        } else {\n            console.warn('Cannot save invalid coordinates:', this.coordinates);\n        }\n    }\n    \n    #dispatchChangeEvent(){\n        this.dispatchEvent(new UmbChangeEvent());\n    }\n\n    constructor() {\n        super();\n        this.consumeContext(UMB_AUTH_CONTEXT,(context) =>{\n            this._authContext = context;\n            if (this._authContext) {\n                this.geoAuthToken = this._authContext.getLatestToken();\n            }\n        } )\n    }\n    render() {\n        return html`\n        <div class=\"coordinate\">\n            <uui-input \n                type=\"number\"\n                label=\"Latitude Value:\" \n                placeholder=\"Latitude\"\n                min=\"-90\"\n                max=\"90\"\n                .value=\"${this.coordinates.latitude}\"\n                @input=\"${(e: InputEvent) => this.#onInput(e, 'latitude')}\"\n                @change=\"${(e: Event) => this.#onChange(e, 'latitude')}\"\n                .error=\"${!this._validationState.isLatitudeValid}\"\n            ></uui-input>\n        </div>\n        <div class=\"coordinate\">\n            <uui-input \n                type=\"number\"\n                label=\"Longitude Value:\" \n                placeholder=\"Longitude\"\n                min=\"-180\"\n                max=\"180\"\n                .value=\"${this.coordinates.longitude}\"\n                @input=\"${(e: InputEvent) => this.#onInput(e, 'longitude')}\"\n                @change=\"${(e: Event) => this.#onChange(e, 'longitude')}\"\n                .error=\"${!this._validationState.isLongitudeValid}\"\n            ></uui-input>\n        </div>\n        <div class=\"coordinate\">\n            <uui-input \n                type=\"number\"\n                max=\"8850\"\n                min=\"-420\"\n                label=\"Elevation Value:\" \n                placeholder=\"Elevation\"\n                .value=\"${this.coordinates.elevation}\"\n                @input=\"${(e: InputEvent) => this.#onInput(e, 'elevation')}\"\n                @change=\"${(e: Event) => this.#onChange(e, 'elevation')}\"\n                .error=\"${!this._validationState.isElevationValid}\"\n            ></uui-input>\n        </div>\n        `;\n    }\n\n    async connectedCallback() {\n        super.connectedCallback();\n\n\n        await this.#validateCoordinates();\n\n        this.consumeContext(UMB_AUTH_CONTEXT, (context) => {\n            this._authContext = context;\n            if (this._authContext) {\n                this.geoAuthToken = this._authContext.getLatestToken();\n            }\n        });\n    }\n\n    async #validateCoordinates() {\n        if (!this._authContext) return;\n    \n        const token = await this._authContext.getLatestToken();\n        const headers = {\n            Authorization: `Bearer ${token}`,\n        };\n    \n        try {\n            const response = await fetch(\n                `/AreCoordinatesValid?latitude=${this.coordinates.latitude}&longitude=${this.coordinates.longitude}&elevation=${this.coordinates.elevation}`,\n                { headers }\n            );\n            const results = await response.json();\n    \n            this._validationState = {\n                isLatitudeValid: results.isLatitudeValid,\n                isLongitudeValid: results.isLongitudeValid,\n                isElevationValid: results.isElevationValid,\n                isValid: results.isValid,\n            };\n    \n            console.log('Validation results:', this._validationState);\n        } catch (error) {\n            console.error('Error validating coordinates:', error);\n        }\n    }\n\n}\n\n\ndeclare global {\n        interface HTMLElementTagNameMap {\n            'geo-location': UmbGeoLocationPropertyEditorUIElement;\n    }\n}\n\n"],"names":["_UmbGeoLocationPropertyEditorUIElement_instances","onInput_fn","onChange_fn","dispatchChangeEvent_fn","validateCoordinates_fn","UmbGeoLocationPropertyEditorUIElement","UmbElementMixin","LitElement","__privateAdd","UMB_AUTH_CONTEXT","context","value","config","defaultCoordinatesConfigValue","html","e","__privateMethod","field","UmbChangeEvent","headers","results","error","__decorateClass","property","customElement"],"mappings":"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"}